(()=>{var e={762:(e,t,a)=>{"use strict";a.d(t,{t:()=>P});let s={type:Phaser.AUTO,parent:"gameContainer",width:800,height:600,physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scene:{preload:function(){this.load.setBaseURL(""),this.load.image("background","/assets/img/background.png"),this.load.image("player","/assets/img/robot.png"),this.load.image("treasure","/assets/img/treasure-mound.png"),this.load.image("amogus","/assets/img/sus.png")},create:function(){const e=this;this.socket=io(`/?room=${K}`),this.otherPlayers=this.physics.add.group(),this.socket.on("currentPlayers",(t=>{Object.keys(t).forEach((a=>{t[a].playerId===e.socket.id?function(e,t){e.player=e.physics.add.sprite(t.x,t.y,"player"),e.player.setBounce(0),e.player.setCollideWorldBounds(!0),e.cameras.main.startFollow(e.player)}(e,t[a]):k(e,t[a])}))})),this.socket.on("newPlayer",(t=>{k(e,t)})),this.socket.on("playerDisconnected",(t=>{e.otherPlayers.getChildren().forEach((e=>{t===e.playerId&&e.destroy()}))})),i=this.input.keyboard.createCursorKeys(),this.socket.on("playerMoved",(t=>{e.otherPlayers.getChildren().forEach((e=>{t.playerId===e.playerId&&e.setPosition(t.x,t.y)}))})),this.gameTimer=0,this.socket.on("timerTicked",(t=>{e.gameTimer=t,l.setText(f(e.gameTimer))})),this.treasures=this.physics.add.group(),this.socket.on("placeTreasures",(t=>{t.forEach((t=>{!function(e,t){const a=e.physics.add.sprite(t.x,t.y,"treasure");a._id=t._id,a.challenge=t.challenge,e.treasures.add(a)}(e,t)}))})),this.socket.on("treasureRemoved",(t=>{const a=e.treasures.getChildren().find((e=>e._id===t._id));p&&c===a&&(p=!1,u.setText("")),a.destroy()})),this.playerWinText=this.add.text(0,0,"",{fontSize:"32px",fill:"#000",align:"center"}),this.playerWinText.setDepth(1),this.gameOver=!1,this.socket.on("playerWon",(t=>{console.log(t);let a="";t.forEach((e=>{a+=`${e.playerId}: ${e.score}\n`})),e.playerWinText.setText(a),e.playerWinText.x=this.player.body.position.x-e.playerWinText.width/2,e.playerWinText.y=this.player.body.position.y-200,e.gameOver=!0})),this.add.image(500,500,"background"),this.cameras.main.setBackgroundColor("#863b00"),this.physics.world.setBounds(0,0,1e3,1e3),d=0,y=this.add.text(16,16,d,{fontSize:"32px",fill:"#000"}),y.setDepth(1),l=this.add.text(500,245,f(this.gameTimer),{fontSize:"32px",fill:"#000"}),l.setDepth(1),u=this.add.text(532,600,"",{fontSize:"40px",fill:"#000",align:"center"}),u.setDepth(1),n=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),p=!1,h=[],h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Q)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.E)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.R)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.T)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Y)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.U)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.I)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.O)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.P)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.F)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.G)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.H)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.J)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.K)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.L)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Z)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.X)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.C)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.V)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.B)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.N)),h.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.M))},update:function(){if(this.player&&!this.gameOver){if(i.left.isDown&&!p?this.player.setVelocityX(-300):i.right.isDown&&!p?this.player.setVelocityX(r):this.player.setVelocityX(0),i.up.isDown&&!p?this.player.setVelocityY(-300):i.down.isDown&&!p?this.player.setVelocityY(r):this.player.setVelocityY(0),Phaser.Input.Keyboard.JustDown(n)&&(p?(p=!1,u.setText("")):this.treasures.children.iterate((e=>{this.physics.world.overlap(this.player,e,x)}))),p)if(Phaser.Input.Keyboard.JustDown(h[c.challenge[m]]))m++,u.setText(u.text+" "+o[c.challenge[m]]),m>=c.challenge.length&&(this,e=c,d++,y.setText(d),p=!1,u.setText(""),this.socket.emit("treasureCollected",{x:e.x,y:e.y,challenge:e.challenge,_id:e._id}),e.destroy());else if(g){let e=!1;for(let t=0;t<h.length;t++)e=e||Phaser.Input.Keyboard.JustDown(h[t]);e&&(p=!1,u.setText(""))}var e;y.x=this.player.body.position.x-350,y.y=this.player.body.position.y-255,l.x=this.player.body.position.x,l.y=this.player.body.position.y-255,u.x=this.player.body.position.x+this.player.body.width/2-u.displayWidth/2,u.y=this.player.body.position.y+100,!this.player.oldPosition||this.player.body.position.x===this.player.oldPosition.x&&this.player.body.position.y===this.player.oldPosition.y||this.socket.emit("playerMovement",{x:this.player.body.position.x,y:this.player.body.position.y}),this.player.oldPosition={x:this.player.body.position.x,y:this.player.body.position.y}}}}};const r=300,o=["Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","C","V","B","N","M"];let i,n,d,y,l,h,p,c,m,u,b,K,g=!1;const P=(e,t)=>{K=e,g=t,b=new Phaser.Game(s)};function x(e,t){c=t,p=!0,m=0,u.setText(o[c.challenge[m]])}function f(e){let t=Math.floor(e/60),a=Math.floor(e%60);return`${t}:${a<10?"0"+a:a}`}function k(e,t){const a=e.physics.add.sprite(t.x,t.y,"amogus").setOrigin(.25);a.playerId=t.playerId,a.setPosition(t.x,t.y),e.otherPlayers.add(a)}},603:e=>{e.exports={sendPost:async(e,t,a)=>{console.log(t);const s=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),r=await s.json();r.redirect&&(window.location=r.redirect),r.error&&console.log(r.error),a&&a(r)}}},977:(e,t,a)=>{"use strict";var s=a(762),r=a(603);const o=e=>{e.preventDefault();const t=e.target.querySelector("#roomName").value,a=e.target.querySelector("#maxPlayers").value,s=e.target.querySelector("#minPlayers").value,o=e.target.querySelector("#time").value,i=e.target.querySelector("#treasure").value,n=e.target.querySelector("#difficulty").checked;return t&&a&&s&&o&&i?(r.sendPost(e.target.action,{name:t,maxPlayers:a,minPlayers:s,time:o,numTreasures:i,hardOn:n},y),!1):(console.log("all fields required"),!1)},i=e=>React.createElement("form",{id:"roomForm",onSubmit:o,name:"roomForm",action:"/makeRoom",method:"POST",className:"roomForm"},React.createElement("label",{htmlFor:"name"},"room name: "),React.createElement("input",{id:"roomName",type:"text",name:"name",placeholder:"new room"}),React.createElement("label",{htmlFor:"maxPlayers"},"max players: "),React.createElement("input",{id:"maxPlayers",type:"number",min:"1",name:"maxPlayers"}),React.createElement("label",{htmlFor:"minPlayers"},"min players to start: "),React.createElement("input",{id:"minPlayers",type:"number",min:"1",name:"minPlayers"}),React.createElement("label",{htmlFor:"time"},"time(min): "),React.createElement("input",{id:"time",type:"number",min:"1",name:"time"}),React.createElement("label",{htmlFor:"treasure"},"amount of treasure: "),React.createElement("input",{id:"treasure",type:"number",min:"1",name:"treasure"}),React.createElement("label",{htmlFor:"difficulty"},"hard mode on: "),React.createElement("input",{id:"difficulty",type:"checkbox",name:"difficulty"}),React.createElement("input",{className:"roomSetupSubmit",type:"submit",value:"create room"})),n=e=>{if(0===Object.keys(e.rooms).length)return React.createElement("div",{className:"roomList"},React.createElement("h3",{className:"emptyRoomList"}," no rooms yet"));const t=Object.values(e.rooms).map((e=>React.createElement("div",{key:e._id,className:"room"},React.createElement("h3",{className:"roomName"}," name: ",e.name," "),React.createElement("h3",{className:"roomMax"}," max players: ",e.maxPlayers," "),React.createElement("h3",{className:"roomMin"}," min players to start: ",e.minPlayers," "),React.createElement("h3",{className:"roomTime"}," time: ",e.time+":00"," "),React.createElement("h3",{className:"roomTreasures"}," amount of treasure: ",e.numTreasures),React.createElement("h3",{className:"roomDifficulty"}," hard mode on: ",e.hard?"yes":"no"," "),React.createElement("h3",{className:"roomPlayers"}," players in the room: ",e.currentPlayers),React.createElement("button",{id:"joinRoom",className:"joinRoomButton",type:"button",onClick:()=>d(e._id,e.hard)},"join"))));return React.createElement("div",{className:"roomList"},t)},d=(e,t)=>{document.getElementById("gameSetup").classList.add("hidden"),document.getElementById("roomList").classList.add("hidden"),s.t(e,t)},y=async()=>{const e=await fetch("/getRooms"),t=await e.json();ReactDOM.render(React.createElement(n,{rooms:t.roomObject}),document.getElementById("roomList"))};window.onload=async()=>{ReactDOM.render(React.createElement(i,null),document.getElementById("gameSetup")),ReactDOM.render(React.createElement(n,{rooms:{}}),document.getElementById("roomList")),y()}}},t={};function a(s){var r=t[s];if(void 0!==r)return r.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,a),o.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var s in t)a.o(t,s)&&!a.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a(977),a(762)})();