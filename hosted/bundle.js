(()=>{let e={type:Phaser.AUTO,width:800,height:600,physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scene:{preload:function(){this.load.setBaseURL(""),this.load.image("background","/assets/img/background.png"),this.load.image("player","/assets/img/robot.png"),this.load.image("treasure","/assets/img/treasure-mound.png"),this.load.image("amogus","/assets/img/sus.png")},create:function(){const e=this;this.socket=io(),this.otherPlayers=this.physics.add.group(),this.socket.on("currentPlayers",(s=>{Object.keys(s).forEach((t=>{s[t].playerId===e.socket.id?function(e,s){e.player=e.physics.add.sprite(s.x,s.y,"player"),e.player.setBounce(0),e.player.setCollideWorldBounds(!0),e.cameras.main.startFollow(e.player)}(e,s[t]):b(e,s[t])}))})),this.socket.on("newPlayer",(s=>{b(e,s)})),this.socket.on("playerDisconnected",(s=>{e.otherPlayers.getChildren().forEach((e=>{s===e.playerId&&e.destroy()}))})),a=this.input.keyboard.createCursorKeys(),this.socket.on("playerMoved",(s=>{e.otherPlayers.getChildren().forEach((e=>{s.playerId===e.playerId&&e.setPosition(s.x,s.y)}))})),this.gameTimer=240,this.socket.on("timerTicked",(s=>{e.gameTimer=s,y.setText(K(e.gameTimer))})),this.treasures=this.physics.add.group(),this.socket.on("placeTreasures",(s=>{s.forEach((s=>{!function(e,s){const t=e.physics.add.sprite(s.x,s.y,"treasure");t._id=s._id,t.challenge=s.challenge,e.treasures.add(t)}(e,s)}))})),this.socket.on("treasureRemoved",(s=>{const t=e.treasures.getChildren().find((e=>e._id===s._id));h&&p===t&&(h=!1,u.setText("")),t.destroy()})),this.add.image(500,500,"background"),this.cameras.main.setBackgroundColor("#863b00"),this.physics.world.setBounds(0,0,1e3,1e3),d=0,i=this.add.text(16,16,d,{fontSize:"32px",fill:"#000"}),y=e.add.text(500,245,K(this.gameTimer),{fontSize:"32px",fill:"#000"}),u=e.add.text(532,600,"",{fontSize:"40px",fill:"#000",align:"center"}),o=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),h=!1,r=[],r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Q)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.E)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.R)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.T)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Y)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.U)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.I)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.O)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.P)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.F)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.G)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.H)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.J)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.K)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.L)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Z)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.X)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.C)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.V)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.B)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.N)),r.push(this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.M))},update:function(){var e;this.player&&(a.left.isDown&&!h?this.player.setVelocityX(-300):a.right.isDown&&!h?this.player.setVelocityX(s):this.player.setVelocityX(0),a.up.isDown&&!h?this.player.setVelocityY(-300):a.down.isDown&&!h?this.player.setVelocityY(s):this.player.setVelocityY(0),Phaser.Input.Keyboard.JustDown(o)&&!h&&this.treasures.children.iterate((e=>{this.physics.world.overlap(this.player,e,l)})),h&&Phaser.Input.Keyboard.JustDown(r[p.challenge[n]])&&(n++,u.setText(u.text+" "+t[p.challenge[n]]),n>=p.challenge.length&&(this,e=p,d++,i.setText(d),h=!1,u.setText(""),this.socket.emit("treasureCollected",{x:e.x,y:e.y,challenge:e.challenge,_id:e._id}),e.destroy())),i.x=this.player.body.position.x-350,i.y=this.player.body.position.y-255,y.x=this.player.body.position.x,y.y=this.player.body.position.y-255,u.x=this.player.body.position.x+this.player.body.width/2-u.displayWidth/2,u.y=this.player.body.position.y+100,!this.player.oldPosition||this.player.body.position.x===this.player.oldPosition.x&&this.player.body.position.y===this.player.oldPosition.y||this.socket.emit("playerMovement",{x:this.player.body.position.x,y:this.player.body.position.y}),this.player.oldPosition={x:this.player.body.position.x,y:this.player.body.position.y})}}};const s=300,t=["Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","C","V","B","N","M"];let a,o,d,i,y,r,h,p,n,u;function l(e,s){p=s,h=!0,n=0,u.setText(t[p.challenge[n]])}function K(e){let s=Math.floor(e/60),t=Math.floor(e%60);return`${s}:${t<10?"0"+t:t}`}function b(e,s){const t=e.physics.add.sprite(s.x,s.y,"amogus");t.playerId=s.playerId,e.otherPlayers.add(t)}new Phaser.Game(e)})();