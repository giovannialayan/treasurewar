(()=>{var e={603:e=>{e.exports={sendPost:async(e,a,t,n)=>{const s=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),c=await s.json();c.redirect&&(window.location=c.redirect),c.error&&(t.innerText=c.error),n&&n(c)}}},856:e=>{const a=e=>React.createElement("nav",{className:"navbar"},React.createElement("a",{href:"/home",className:"navHome"},"home"),React.createElement("a",{href:"/game",className:"navGame"},"game"),React.createElement("a",{href:"/leaderboard",className:"navBoard"},"leaderboard"),React.createElement("a",{href:"/shop",className:"navShop"},"shop"),React.createElement("a",{href:"/account",className:"navAccount"},"account"),React.createElement("a",{href:"/logout",className:"navLogout"},"logout"));e.exports={renderNavbar:()=>{ReactDOM.render(React.createElement(a,null),document.getElementById("navbar"))}}}},a={};function t(n){var s=a[n];if(void 0!==s)return s.exports;var c=a[n]={exports:{}};return e[n](c,c.exports,t),c.exports}(()=>{const e=t(603),a=t(856),n=e=>{let a;return a=e.account.skins?e.account.skins.map((a=>React.createElement("div",{key:a._id,className:"skin"},React.createElement("img",{src:a.img,className:"skinImg"}),React.createElement("p",{className:"skinName"},a.name),React.createElement("p",{className:"skinDesc"},a.desc),React.createElement("button",{className:a.name!==e.account.equippedSkin?"equipSkinButton":"equippedSkinButton",onClick:()=>{a.name!==e.account.equippedSkin&&r(a.name)}},a.name===e.account.equippedSkin?"equipped":"equip")))):"",React.createElement("div",{className:"account"},React.createElement("div",{className:"accountInfo"},React.createElement("p",{className:"username"},e.account.username),React.createElement("p",{className:"wins"},"wins: ",e.account.wins),React.createElement("p",{className:"topThrees"},"top three finishes: ",e.account.topThrees),React.createElement("p",{className:"gamesPlayed"},"games played: ",e.account.gamesPlayed)),React.createElement("p",{className:"skinsTitle"},"your skins"),React.createElement("p",{id:"skinsErrorText"}),React.createElement("div",{className:"skins"},a),React.createElement("button",{id:"changePassButton",className:"changePassButton"},"change your password"),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}))},s=e=>React.createElement("form",{id:"passChangeForm",name:"passChangeForm",onSubmit:c,action:"/changePass",method:"POST",className:"mainForm"},React.createElement("div",{className:"passChangeCurrPass"},React.createElement("label",{htmlFor:"currPass"},"current password: "),React.createElement("input",{id:"currPass",type:"password",name:"currPass",placeholder:"current password"})),React.createElement("div",{className:"passChangeNewPass"},React.createElement("label",{htmlFor:"newPass"},"password: "),React.createElement("input",{id:"newPass",type:"password",name:"newPass",placeholder:"new password"})),React.createElement("div",{className:"passChangeNewPass2"},React.createElement("label",{htmlFor:"newPass2"},"password: "),React.createElement("input",{id:"newPass2",type:"password",name:"newPass2",placeholder:"retype new password"})),React.createElement("input",{className:"formSubmit",type:"submit",value:"change password"}),React.createElement("p",{id:"passChangeErrorText"})),c=a=>{a.preventDefault();const t=a.target.querySelector("#currPass").value,n=a.target.querySelector("#newPass").value,s=a.target.querySelector("#newPass2").value,c=document.querySelector("#_csrf").value;return t&&n&&s?(e.sendPost(a.target.action,{currPass:t,newPass:n,newPass2:s,_csrf:c},document.getElementById("passChangeErrorText")),!1):(document.getElementById("passChangeErrorText").innerText="one or more fields are empty",!1)},r=async a=>{const t=document.getElementById("_csrf").value;e.sendPost("/equipSkin",{name:a,_csrf:t},document.getElementById("skinsErrorText"),o)},o=async()=>{const e=await fetch("/getAccount"),a=await e.json(),t=await fetch("/getToken"),s=await t.json();ReactDOM.render(React.createElement(n,{account:a.account,csrf:s.csrfToken}),document.getElementById("account"))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();ReactDOM.render(React.createElement(n,{account:{skins:[]},csrf:t.csrfToken}),document.getElementById("account")),o();const c=document.getElementById("passwordChange");ReactDOM.render(React.createElement(s,null),c),c.classList.add("hidden"),document.getElementById("changePassButton").addEventListener("click",(e=>{c.classList.toggle("hidden"),window.scrollBy(0,document.body.scrollHeight)})),a.renderNavbar()}})()})();