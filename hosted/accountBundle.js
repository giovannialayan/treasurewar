(()=>{var e={603:e=>{e.exports={sendPost:async(e,a,t)=>{console.log(a);const s=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),n=await s.json();n.redirect&&(window.location=n.redirect),n.error&&console.log(n.error),t&&t(n)}}}},a={};function t(s){var n=a[s];if(void 0!==n)return n.exports;var c=a[s]={exports:{}};return e[s](c,c.exports,t),c.exports}(()=>{const e=t(603),a=e=>{let a;return a=e.account.skins?e.account.skins.map((a=>React.createElement("div",{key:a._id,className:"skin"},React.createElement("img",{src:a.img,className:"skinImg"}),React.createElement("p",{className:"skinName"},a.name),React.createElement("p",{className:"skinDesc"},a.desc),React.createElement("button",{className:a.name!==e.account.equippedSkin?"equipSkinButton":"equippedSkinButton",onClick:()=>{a.name!==e.account.equippedSkin&&c(a.name)}},a.name===e.account.equippedSkin?"equip":"equipped")))):"",React.createElement("div",{className:"account"},React.createElement("p",{className:"username"},e.account.username),React.createElement("p",{className:"gamesPlayed"},"games played: ",e.account.gamesPlayed),React.createElement("p",{className:"wins"},"wins: ",e.account.wins),React.createElement("p",{className:"topThrees"},"top three finishes: ",e.account.topThrees),React.createElement("p",{className:"winWarning"},"note: wins and top three finishes are only counted in games where at least 10 players are present when the game ends."),React.createElement("div",{className:"skins"},"your skins",a),React.createElement("button",{id:"changePassButton",className:"changePassButton"},"change your password"),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}))},s=e=>React.createElement("form",{id:"passChangeForm",name:"passChangeForm",onSubmit:n,action:"/passChange",method:"POST",className:"mainForm"},React.createElement("div",{className:"passChangeCurrPass"},React.createElement("label",{htmlFor:"currPass"},"current password: "),React.createElement("input",{id:"currPass",type:"password",name:"currPass",placeholder:"current password"})),React.createElement("div",{className:"passChangeNewPass"},React.createElement("label",{htmlFor:"newPass"},"password: "),React.createElement("input",{id:"newPass",type:"password",name:"newPass",placeholder:"new password"})),React.createElement("div",{className:"passChangeNewPass2"},React.createElement("label",{htmlFor:"newPass2"},"password: "),React.createElement("input",{id:"newPass2",type:"password",name:"newPass2",placeholder:"retype new password"})),React.createElement("input",{className:"formSubmit",type:"submit",value:"change password"})),n=a=>{a.preventDefault();const t=a.target.querySelector("#currPass").value,s=a.target.querySelector("#newPass").value,n=a.target.querySelector("#newPass2").value,c=document.querySelector("#_csrf").value;return t&&s&&n?(e.sendPost(a.target.action,{currPass:t,newPass:s,newPass2:n,_csrf:c}),!1):(console.log("username or password is empty"),!1)},c=async a=>{const t=document.getElementById("_csrf").value;e.sendPost("/equipSkin",{name:a,_csrf:t},r)},r=async()=>{const e=await fetch("/getAccount"),t=await e.json(),s=await fetch("/getToken"),n=await s.json();ReactDOM.render(React.createElement(a,{account:t.account,csrf:n.csrfToken}),document.getElementById("account"))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();ReactDOM.render(React.createElement(a,{account:{skins:[]},csrf:t.csrfToken}),document.getElementById("account")),r();const n=document.getElementById("passwordChange");ReactDOM.render(React.createElement(s,null),n),n.classList.add("hidden"),document.getElementById("changePassButton").addEventListener("click",(e=>{n.classList.toggle("hidden")}))}})()})();